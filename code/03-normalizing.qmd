---
title: "03-normalizing"
author: "Sarah Tanja"
format:
  gfm:
    toc: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Install Packages

```{r}
install.packages('DT')
```

## Load Packages

```{r}
library(tidyverse)
library(ggplot2)
library(readr)
library(DT)
```

## Load in data

```{r}
# Import data 
extracted_slim <- read_csv("../output/extracted_slim.csv")

extracted_slim <- extracted_slim %>% 
  mutate(qubit_rna_avg = round(qubit_rna_avg, digits = 2)) %>% 
  mutate(qubit_dna_avg = round(qubit_dna_avg, digits = 2))

datatable(extracted_slim)
```

#### Make DNA and RNA dataframes

```{r}
extracted_rna <- extracted_slim %>% 
    select(-qubit_dna_avg)

extracted_dna <- extracted_slim %>% 
    select(-qubit_rna_avg)
```

## Normalizing

-   RNA quantity has to be normalized to $25ng/\mu L$ and sent in a volume of 25uL in a 96-well PCR plate (or 1.5mL tubes)
-   DNA quantity has to be normalized to $20ng/\mu L$ and sent in a volume of 30uL in a 96-well PCR plate (or )

In order to do this we have to dilute! Enter the handy $C1*V1 = C2*V2$ concentration-volume relationship (dilution) equation!

Knowns: - $C1$ is the average qubit score - $V1 = 5\mu L$ (a small but reasonably accurate volume to pipette from our eluted sample to dilute in nuclease-free water) - $C2 = 25ng/\mu L$ for RNA - $C2 = 20ng/\mu L$ for DNA

Here, we need to solve for $V2$, which is the total end volume for the dilution. The amount of DNase/Rnase free water we need will be $V2 - V1$, with $V1 = 5\mu L$.

Solving for V2 (the volume of nuclease-free water) $$
C1*V1 = C2*V2 \\
$$

$$
\frac{C1*V1}{C2} = V2 \\
$$

Let's write a function that calculates the volumes needed for us (V1 and V2) for each of our eluted samples based on inputs (C1 and C2) and the following parameters:

-   we can't pipette less than $1 \mu L$, therefore V1 \> 1

-   the volume of our eluted samples are $50 \mu L$, therefore V2 \< 49

```{r}
dilute <- function(C1, C2) {
  # Initialize variables
  n <- length(C1)
  C1 <- C1
  V1 <- numeric(n)  # Initialize V1 vector
  V2 <- numeric(n)  # Initialize V2 vector
  
  # Loop through rows
  for (i in seq_along(C1)) {
    # Check for missing data
    if (C1[i] <= 0) {
      cat("Skipping row ", i, ": Invalid data\n")
      next
    }
    
    # Initialize V1 and V2 for the current row
    V1_row <- 1
    V2_row <- (C1[i] * V1_row) / C2
    
    # Loop until conditions are satisfied
    while (!is.na(V1_row) && !is.na(V2_row) && (V1_row < 1 || V2_row < 50)) {
      V1_row <- V1_row + 1
      V2_row <- (C1[i] * V1_row) / C2
      
      # Break the loop if V1 exceeds a threshold value
      if(V1_row > 25) {
        cat("Skipping row ", i, ": No valid solution found\n")
        next
      }
    }
    
    # Store optimized V1 and V2 values in the corresponding vectors
    V1[i] <- V1_row
    V2[i] <- V2_row
  }
  
# Create a data frame with C1 column
  result <- data.frame(C1 = C1)

# Add V1 and V2 columns to the result data frame
  result$V1 <- V1
  result$V2 <- V2
  result$C2 <- C1*V1/V2

  return(result)
}
```

### RNA

Use the `dilute` function, which has an output of a new dataframe

```{r}
rna_dilution <- dilute(C1 = extracted_rna$qubit_rna_avg, C2 = 26)
datatable(rna_dilution)
```

Join the rna_dilution to the extracted_rna dataframe Where qubit_rna_avg = C1

```{r}
# rename qubit_rna_avg to C1 for the merge 
diluted_rna <- extracted_rna %>%
  mutate(C1 = qubit_rna_avg) 

diluted_rna <- merge(diluted_rna, rna_dilution, by = 'C1' ) %>% 
  relocate(C1, .after = qubit_rna_avg)

# round to whole uL volumes and recalculate C2
diluted_rna <- diluted_rna %>% 
  mutate(V1_minus_V2 = round(V2 - V1, digits = 0), 
         V2 = round(V2, digits = 0),
         C2 = round(C1*V1/V2, digits = 2)) %>% 
  relocate(V1_minus_V2, .after = V1)

write_csv(diluted_rna, "../output/diluted_rna.csv")
datatable(diluted_rna)
```

Confirm Where: V1 = eluted rna volume $\mu L$

V2 = final volume $\mu L$ C2 = calculated final concentration $ug \mu L$ C2_qubit = qubit tested final concentration $ug \mu L$

### DNA

Use the `dilute` function, which has an output of a new dataframe

```{r}
dna_dilution <- dilute(C1 = extracted_dna$qubit_dna_avg, C2 = 21)
datatable(dna_dilution)
```

Join the rna_dilution to the extracted_rna dataframe Where qubit_rna_avg = C1

```{r}
# rename qubit_rna_avg to C1 for the merge 
diluted_dna <- extracted_dna %>%
  mutate(C1 = qubit_dna_avg) 

diluted_dna <- merge(diluted_dna, dna_dilution, by = 'C1' ) %>% 
  relocate(C1, .after = qubit_dna_avg)

# round to whole uL volumes and recalculate C2
diluted_dna <- diluted_dna %>% 
  mutate(V1_minus_V2 = round(V2 - V1, digits = 0), 
         V2 = round(V2, digits = 0),
         C2 = round(C1*V1/V2, digits = 2)) %>% 
  relocate(V1_minus_V2, .after = V1)

write_csv(diluted_dna, "../output/diluted_dna.csv")
datatable(diluted_dna)
```

::: callout-warning
Any samples that are below the optimal concentration of $20 ug/ \mu L$ will have a 0 or negative `V2_minus_V1`
:::

------------------------------------------------------------------------

## 06-SEP-2023

Diluting RNA samples to 25ng/uL in a 25uL volume.

```{r}
sampleID <- c("1-CA2a", "1-PA2a", "1-CH2a", "1-Ea", "1-PH1a", "1-HH2a", "2-HH2a", "1-HA2a", "3-HH2a", "3-MA2a")

nanodrop <- c(42.86, 35.33, 13.93, 26.94, 27.61, 66.4, 12.3, 45.2, 29.8, 35.5)

rna_dilution_06SEP23 <- data.frame(sampleID = sampleID, 
                                   nanodrop = nanodrop)
```

```{r}
dilution <- function(C1, V2, C2) {
  # Use lapply to calculate V1 for each C1 value
  V1_list <- lapply(C1, function(x) ceiling((C2 * V2) / x))
  
  # Calculate the difference between V2 and V1 for each C1 value
  V2_minus_V1 <- V2 - unlist(V1_list)
  
  # Return a list containing both the V1 values and the differences
  result <- list(V1 = V1_list, V2_minus_V1 = V2_minus_V1)
  
  # Print the results
  for (i in seq_along(result$V1)) {
    cat("For C1 =", C1[i], "ng/uL, V1 =", result$V1[[i]], "uL, V2 - V1 =", result$V2_minus_V1[i], "uL\n")
  }
  
  # Create a dataframe with calculated values
  result_df <- tibble(C1 = C1, V1 = unlist(V1_list), V2_minus_V1 = V2_minus_V1)
  
  return(result_df)
}

# Example usage:
# C1 =  List of concentrations of the stock solution
# V2 = Desired final volume
# C2 = Desired final concentration

```

```{r}
# Enter list of C1, values for V2 & C2, and print the results
result <- dilution(rna_dilution_06SEP23$nanodrop, 25, 25)

```

```{r}
# Add result to dataframe
rna_dilution_06SEP23 <- rna_dilution_06SEP23 %>% 
  mutate(sample.uL = result$V1, RNaseH2O = result$V2_minus_V1)

# Save dataframe so I can print it
write_csv(rna_dilution_06SEP23, "../output/rna_dilution_06SEP23.csv")
```
